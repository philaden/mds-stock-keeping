// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/philaden/mds-stock-keeping/application/repositories (interfaces: IProductRepository)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domains "github.com/philaden/mds-stock-keeping/application/domains"
)

// MockIProductRepository is a mock of IProductRepository interface.
type MockIProductRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIProductRepositoryMockRecorder
}

// MockIProductRepositoryMockRecorder is the mock recorder for MockIProductRepository.
type MockIProductRepositoryMockRecorder struct {
	mock *MockIProductRepository
}

// NewMockIProductRepository creates a new mock instance.
func NewMockIProductRepository(ctrl *gomock.Controller) *MockIProductRepository {
	mock := &MockIProductRepository{ctrl: ctrl}
	mock.recorder = &MockIProductRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIProductRepository) EXPECT() *MockIProductRepositoryMockRecorder {
	return m.recorder
}

// GetProductBySku mocks base method.
func (m *MockIProductRepository) GetProductBySku(arg0 string) (*domains.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductBySku", arg0)
	ret0, _ := ret[0].(*domains.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProductBySku indicates an expected call of GetProductBySku.
func (mr *MockIProductRepositoryMockRecorder) GetProductBySku(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductBySku", reflect.TypeOf((*MockIProductRepository)(nil).GetProductBySku), arg0)
}

// GetProducts mocks base method.
func (m *MockIProductRepository) GetProducts() ([]domains.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProducts")
	ret0, _ := ret[0].([]domains.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProducts indicates an expected call of GetProducts.
func (mr *MockIProductRepositoryMockRecorder) GetProducts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProducts", reflect.TypeOf((*MockIProductRepository)(nil).GetProducts))
}

// SaveStock mocks base method.
func (m *MockIProductRepository) SaveStock(arg0, arg1, arg2 string, arg3 int) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveStock", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveStock indicates an expected call of SaveStock.
func (mr *MockIProductRepositoryMockRecorder) SaveStock(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveStock", reflect.TypeOf((*MockIProductRepository)(nil).SaveStock), arg0, arg1, arg2, arg3)
}
